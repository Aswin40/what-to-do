{"version":3,"sources":["config.js","api/boredAPI.js","components/Loader.js","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["config","getActivities","filters","a","fetch","host","res","data","json","console","log","this","App","type","color","height","width","visible","props","React","Component","Intro","Fragment","className","Activty","activityDetails","loading","activity","style","textAlign","onClick","Home","useState","setActivityDetails","setLoading","useEffect","getActivitiesFromApi","boredAPI","then","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAaA,EACI,2BCiBF,MAfb,aAAe,IAAD,gCAIdC,cAJc,uCAIE,WAAOC,GAAP,iBAAAC,EAAA,+EAEMC,MAAM,GAAD,OAAI,EAAKC,KAAT,kBAFX,cAENC,EAFM,OAGNC,EAAOD,EAAIE,OAHL,kBAILD,GAJK,gCAMZE,QAAQC,IAAI,0BANA,yDAJF,sDACZC,KAAKN,KAAOL,G,6DCDKY,E,4JAEnB,WACE,OACE,cAAC,IAAD,CACEC,KAAK,eACLC,MAAM,OACNC,OAAQ,IACRC,MAAO,IACPC,QAASN,KAAKO,MAAMD,c,GATKE,IAAMC,WCgBjCC,EAAQ,WACZ,OACE,cAAC,IAAMC,SAAP,UACE,oBAAIC,UAAU,UAAd,yEAOAC,EAAU,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,QAASzB,EAAoB,EAApBA,cAC3C,OACE,8BACGyB,EACC,cAAC,EAAD,IAEA,eAAC,IAAMJ,SAAP,WACE,oBAAGC,UAAS,gBAAZ,qBAAiCE,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAiBE,YAClD,qBAAKJ,UAAU,sCAAf,SACE,wBACEK,MAAO,CAAEC,UAAW,UACpBN,UAAU,4BACVO,QAAS7B,EAHX,wCAcG8B,EAjDF,SAAC,GAAiD,IAA/CN,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,QAASzB,EAAoB,EAApBA,cACxC,OACE,eAAC,IAAMqB,SAAP,WACE,8BACE,cAAC,EAAD,MAEF,qBAAKC,UAAU,qBAAf,SACE,cAAC,EAAD,CACEE,gBAAiBA,EACjBC,QAASA,EACTzB,cAAeA,UCuBVW,MA9Bf,WACE,MAA8CoB,mBAAS,MAAvD,mBAAOP,EAAP,KAAwBQ,EAAxB,KACA,EAA8BD,oBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KAEAC,qBAAU,WACRD,GAAW,GACXE,MACC,IAEH,IAAMA,EAAuB,WAC3BF,GAAW,GACXG,EACGpC,gBACAqC,MAAK,SAACb,GAAD,OAAqBQ,EAAmBR,MAC7Cc,SAAQ,WACPL,GAAW,OAIjB,OACE,qBAAKX,UAAS,qBAASE,QAAT,IAASA,OAAT,EAASA,EAAiBZ,MAAxC,SACE,cAAC,EAAD,CACEY,gBAAiBA,EACjBC,QAASA,EACTzB,cAAemC,OClBRI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8c99e07b.chunk.js","sourcesContent":["export const config = {\n  bored_api_url: \"https://www.boredapi.com\",\n};\n","import { config } from \"../config\";\n\nclass BoredomAPI {\n  constructor() {\n    this.host = config.bored_api_url;\n  }\n\n  getActivities = async (filters) => {\n    try {\n      const res = await fetch(`${this.host}/api/activity`);\n      const data = res.json();\n      return data;\n    } catch (error) {\n      console.log(\"Error in fetching data\");\n    }\n  };\n}\n\nexport default new BoredomAPI();\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class App extends React.Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"BallTriangle\"\n        color=\"grey\"\n        height={100}\n        width={100}\n        visible={this.props.visible}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Loader from \"./Loader\";\n\nconst Home = ({ activityDetails, loading, getActivities }) => {\n  return (\n    <React.Fragment>\n      <div>\n        <Intro />\n      </div>\n      <div className=\"activity-container\">\n        <Activty\n          activityDetails={activityDetails}\n          loading={loading}\n          getActivities={getActivities}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\nconst Intro = () => {\n  return (\n    <React.Fragment>\n      <h1 className=\"heading\">\n        Life is so boring! &#128580; What to do? &#129300;\n      </h1>\n    </React.Fragment>\n  );\n};\n\nconst Activty = ({ activityDetails, loading, getActivities }) => {\n  return (\n    <div>\n      {loading ? (\n        <Loader />\n      ) : (\n        <React.Fragment>\n          <p className={`activity-text`}> {activityDetails?.activity}</p>\n          <div className=\"try-something-else-button-container\">\n            <button\n              style={{ textAlign: \"center\" }}\n              className=\"try-something-else-button\"\n              onClick={getActivities}\n            >\n              Try Something Else\n            </button>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport boredAPI from \"./api/boredAPI\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  const [activityDetails, setActivityDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getActivitiesFromApi();\n  }, []);\n\n  const getActivitiesFromApi = () => {\n    setLoading(true);\n    boredAPI\n      .getActivities()\n      .then((activityDetails) => setActivityDetails(activityDetails))\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className={`app ${activityDetails?.type}`}>\n      <Home\n        activityDetails={activityDetails}\n        loading={loading}\n        getActivities={getActivitiesFromApi}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}